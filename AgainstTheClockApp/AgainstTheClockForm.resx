<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRLRQBUS0UCVEtFF1RL
        RTdUS0VRVEtFW1RLRVNUS0U7VEtFG1RLRQRUS0UAVEtFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVEtFAFRLRQBUS0UKVEtFRVNK
        RJVSSUPOUUhC6lJIQvVSSUP4UkhC9lFIQuxSSELTU0pEnlRLRU5US0UOVEtFAFRLRQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRLRQBUS0UBVEtFNlNK
        RKtSSELyWVFL/3JrZv+Ri4f/pqGe/q6qp/6oo6D+lI6K/3Zvav9bU03/UklD9lNKRLhUS0VDVEtFA1RL
        RQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUS0UAVEtFBVRL
        RWJSSUPiWVBL/4qEgP/KyMb+8O/v/v39/f7////+/////v////7////+8/Py/tHOzf6SjIj+XFRO/1JJ
        Q+tUS0V0VEtFCVRLRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVEtFAFRL
        RQNUS0VvUklD8mlhXP+/u7n++fj4/v////7////+0tDO/q6qp/708/P++/v7/tjW1f7t7Ov+/////vr6
        +v7JxsT+cWlk/1JJQ/hUS0WDVEtFCFRLRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRL
        RQBUS0UAVEtFV1JJQ+9vZ2L/1tTS/v7+/v7U0tD+1tTT/v////6oo6D+bWZh/ujn5v7l4+P+Z19Z/qei
        n/7////+/v7+/v////7g3t3+eXJt/1JJQ/dUS0VtVEtFAVRLRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAVEtFAFRLRSdTSUPWZFxX/9LPzv7////+9fX1/nt0cP6Ffnr++vn5/vLx8f7l4+L+/f39/vb2
        9f6+urj+3dva/v////7+/v7+///+/v////7d3Nr+bWVg/1JJQ+RUS0U4VEtFAFRLRQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFRLRQBUS0UCVEtFj1VMRv+xrar+/v79/vb29v78/Pz+1tTS/trY1/7+/v7+/////v//
        //7+/v7+/v7+/v////7////+///+/vT0/f7FxPn+4N/8/v////7Avbv+WVBK/1NKRKdUS0UHVEtFAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVEtFAFRLRShSSUPhd3Br//Lx8P7Y1tT+fXZy/tTS0P7////+/////v7+
        /v7+/v7+/v7+/v7+/v7+/v7+/v7+/v///v719P3+rKr3/3l38/+Vk/X/8PD9/vj39v6Ff3r/UkhC7VRL
        RTtUS0UAAAAAAAAAAAAAAAAAAAAAAFRLRQBUS0UAVEtFaVNKRP6wrKn+/////tjW1f6DfHj+19XU/v//
        //7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7///7+9fT9/quq9/97efP/e3nz/3p48//Av/n+/////sG+
        u/5WTUf/VEtFg1RLRQBUS0UAAAAAAAAAAAAAAAAAVEtFAFRLRQJTSkSjX1ZR/9vZ2P7////+/v7+/vn4
        +P79/f3+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+///+/vX0/f6rqvf/e3nz/3t58/97efP/eXfz/5eV
        9f/39//+6Obl/mhgW/9SSUO7VEtFClRLRQAAAAAAAAAAAAAAAABUS0UAVEtFDlJJQsdwaWT/8fDw/tvZ
        2P6qpaL+7+/u/v////7+/v7+/v7+/v7+/v7+/v7+/v7+/v///v719P3+q6r3/3t58/97efP/e3nz/3t5
        8/96ePP/hIL0/+Tk/P75+Pf+fndz/1FIQtpUS0UbVEtFAAAAAAAAAAAAAAAAAFRLRQBUS0UYUUhC2H53
        cv/6+fn+t7Ox/mhgWv7e3Nv+/////v7+/v7+/v7+/v7+/v7+/v7///7+9PT9/qyq9/97efP/e3nz/3t5
        8/97efP/e3nz/3t58/99fPP/1tb7/v///f6NiIT/UUhC6FRLRSlUS0UAAAAAAAAAAAAAAAAAVEtFAFRL
        RRtRSELagHp1//n5+P719PT+5OPi/vv7+/7+/v7+/v7+/v7+/v7+/v7+/v7+/v///v7Kyfr+e3nz/3t5
        8/97efP/e3nz/3t58/97efP/e3nz/3178//T0/r+///9/pGLh/9RSELqVEtFLFRLRQAAAAAAAAAAAAAA
        AABUS0UAVEtFFFFIQtF4cWz/9fT0/v39/f7p6Of+9fX0/v7+/v7+/v7+/v7+/v7+/v7+/v7+///+/sPC
        +f96ePP/e3nz/3t58/97efP/e3nz/3t58/97efP/gH7z/9zc+/79/Pr+h4F8/1FIQuJUS0UjVEtFAAAA
        AAAAAAAAAAAAAFRLRQBUS0UIUklDuGdgWv/p6Of+5OPi/m1lYP6yrqv+/////v7+/v7+/v7+/v7+/v7+
        /v7///7+w8L5/3p48/97efP/e3nz/3t58/97efP/e3nz/3p48/+LifT/7u79/vLx8P5zbGf/UkhCzVRL
        RRJUS0UAAAAAAAAAAAAAAAAAVEtFAFRLRQBTSkSJWE9J/8nGxP7z8/L+pqGe/tPQz/7////+/v7+/v7+
        /v7+/v7+/v7+/v///v7Dwvn/enjz/3t58/97efP/e3nz/3t58/97efP/eXfz/6qp9//+/v/+19XU/l5V
        T/9TSkSiVEtFAlRLRQAAAAAAAAAAAAAAAAAAAAAAVEtFAFRLRUdSSEL0k42K//z8/P7////++fn5/ubl
        5P75+fn+/v7+/v7+/v7+/v7+///+/sPC+f96ePP/e3nz/3t58/97efP/e3nz/3p48/+DgfT/3Nz7/v//
        //6kn5z+UklD+1RLRV9US0UAVEtFAAAAAAAAAAAAAAAAAAAAAABUS0UAVEtFD1NKRL5hWVP/1tTT/v//
        //7Mysj+Z19a/szJyP7////+/////v7+/v7///7+w8L5/3p48/97efP/e3nz/3t58/97efP/e3nz/7q5
        +P/+/v/+4+Hg/mpiXf9SSUPSVEtFHFRLRQAAAAAAAAAAAAAAAAAAAAAAAAAAAFRLRQBUS0UAVEtFV1JJ
        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
        A////gf///gH///wB///8Af///AH///wB/8=
</value>
  </data>
</root>